using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.IO;

public partial class CC_CC_ExportDataDump : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
            
    }
    
    protected void btnSearch_Click(object sender, EventArgs e)
    {
        CCommon ObjCmn = new CCommon();
        bool isValidDates = true;
        if (txtFromDate.Text.Trim() == "" || txtToDate.Text.Trim() == "")
        {
            isValidDates = false;
            lblMsg.Visible = true;
            lblMsg.Text = "Please enter From and To Date.";
            lblMsg.ForeColor = System.Drawing.Color.Red;
            lblMsg.Font.Bold = true;
        }
        
        if (txtFromDate.Text.Trim() != "" && txtToDate.Text.Trim() != "")
        {
            DateTime dtFrom;
            DateTime dtTo;
            dtFrom = Convert.ToDateTime(ObjCmn.strDate(txtFromDate.Text.Trim()));
            dtTo = Convert.ToDateTime(ObjCmn.strDate(txtToDate.Text.Trim()));

            if (dtFrom > dtTo)
            {
                isValidDates = false;
                lblMsg.Visible = true;
                lblMsg.Text = "From date must be less than to date.";
            }
        }
        if (isValidDates == true)
        {
            CExportDataDump objExportDump=new CExportDataDump();
            DataSet dsExportDump = new DataSet();
            string Tdate;            

            Tdate = Convert.ToDateTime(ObjCmn.strDate(txtToDate.Text.Trim())).AddDays(1.0).ToString("dd-MMM-yyyy");

            dsExportDump = objExportDump.GetRecods(ObjCmn.strDate(txtFromDate.Text.Trim()), Tdate, Session["ClientId"].ToString(), Session["CentreId"].ToString());
            if (dsExportDump.Tables[0].Rows.Count > 0)
            {
                tblExportDump.Visible = true;
                gvExportDataDump.DataSource = dsExportDump;
                gvExportDataDump.DataBind();
                lblMsg.Visible = false;
                lblMsg.Text = "";
            }
            else
            {
                tblExportDump.Visible = false;
                lblMsg.Visible = true;
                lblMsg.Text = "Record not found.";
                lblMsg.ForeColor = System.Drawing.Color.Red;
            }
        }
    }

    public override void VerifyRenderingInServerForm(Control control)
    {
        
    }

    protected void btnExcelReport_Click(object sender, EventArgs e)
    {
        CCommon ObjCmn = new CCommon();
        bool isValidDates = true;
        bool isValid = true;
        if (txtFromDate.Text.Trim() != "" && txtToDate.Text.Trim() != "")
        {
            DateTime dtFrom;
            DateTime dtTo;
            dtFrom = Convert.ToDateTime(ObjCmn.strDate(txtFromDate.Text.Trim()));
            dtTo = Convert.ToDateTime(ObjCmn.strDate(txtToDate.Text.Trim()));

            if (dtFrom > dtTo)
            {
                isValidDates = false;
                lblMsg.Visible = true;
                lblMsg.Text = "From date must be less than to date.";
            }
        }
        if (isValidDates == true)
        {
            CExportDataDump objExportDump = new CExportDataDump();
            DataSet dsExportDump = new DataSet();
            string Tdate;

            Tdate = Convert.ToDateTime(ObjCmn.strDate(txtToDate.Text.Trim())).AddDays(1.0).ToString("dd-MMM-yyyy");

            dsExportDump = objExportDump.GetRecods(ObjCmn.strDate(txtFromDate.Text.Trim()), Tdate, Session["ClientId"].ToString(), Session["CentreId"].ToString());
            if (dsExportDump.Tables[0].Rows.Count > 0)
            {
                tblExportDump.Visible = true;
                gvExportDataDump.DataSource = dsExportDump;
                gvExportDataDump.DataBind();
            }
            else
            {
                isValid = false;
                tblExportDump.Visible = false;
            }
            if (isValid == true)
            {
                Response.ClearContent();
                gvExportDataDump.BackColor = System.Drawing.Color.White;
                gvExportDataDump.GridLines = GridLines.Both;
                gvExportDataDump.AutoGenerateDeleteButton = false;
                gvExportDataDump.AutoGenerateEditButton = false;
                gvExportDataDump.AllowSorting = false;
                gvExportDataDump.AllowPaging = false;
                gvExportDataDump.DataBind();

                string attachment = "attachment; filename=ExportDataDump.xls";

                Response.AddHeader("content-disposition", attachment);
                Response.ContentType = "application/ms-excel";
                StringWriter sw = new System.IO.StringWriter();
                HtmlTextWriter htw = new HtmlTextWriter(sw);
                gvExportDataDump.EnableViewState = false;
                gvExportDataDump.RenderControl(htw);
                Response.Write(sw.ToString());
                Response.End();
            }
        }
    }
    protected void gvExportDataDump_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        CCommon ObjCmn = new CCommon();
        gvExportDataDump.PageIndex = e.NewPageIndex;
        CExportDataDump objExportDump = new CExportDataDump();
        DataSet dsExportDump = new DataSet();
        string Tdate;
        Tdate = Convert.ToDateTime(ObjCmn.strDate(txtToDate.Text.Trim())).AddDays(1.0).ToString("dd-MMM-yyyy");

        dsExportDump = objExportDump.GetRecods(ObjCmn.strDate(txtFromDate.Text.Trim()), Tdate, Session["ClientId"].ToString(), Session["CentreId"].ToString());
        if (dsExportDump.Tables[0].Rows.Count > 0)
        {
            tblExportDump.Visible = true;
            gvExportDataDump.DataSource = dsExportDump;
            gvExportDataDump.DataBind();
            lblMsg.Visible = false;
            lblMsg.Text = "";
        }
        else
        {
            tblExportDump.Visible = false;
            lblMsg.Visible = true;
            lblMsg.Text = "Record not found.";
            lblMsg.ForeColor = System.Drawing.Color.Red;
        }
    }
    public SortDirection GridViewSortDirection
    {
        get
        {
            if (ViewState["sortDirection"] == null)
                ViewState["sortDirection"] = SortDirection.Ascending;
            return (SortDirection)ViewState["sortDirection"];
        }
        set { ViewState["sortDirection"] = value; }
    } 

    protected void gvExportDataDump_Sorting(object sender, GridViewSortEventArgs e)
    {
        CCommon ObjCmn = new CCommon();
        CExportDataDump objExportDump = new CExportDataDump();
        DataSet dsExportDump = new DataSet();
        string Tdate;
        Tdate = Convert.ToDateTime(ObjCmn.strDate(txtToDate.Text.Trim())).AddDays(1.0).ToString("dd-MMM-yyyy");

        dsExportDump = objExportDump.GetRecods(ObjCmn.strDate(txtFromDate.Text.Trim()), Tdate, Session["ClientId"].ToString(), Session["CentreId"].ToString());
        if (dsExportDump.Tables[0].Rows.Count > 0)
        {
            DataView dv = new DataView(dsExportDump.Tables[0]);
            string sortExpression = e.SortExpression;
            if (GridViewSortDirection == SortDirection.Ascending)
            {
                GridViewSortDirection = SortDirection.Descending;
                dv.Sort = sortExpression + " " + "ASC";
            }
            else
            {
                GridViewSortDirection = SortDirection.Ascending;
                dv.Sort = sortExpression + " " + "DESC";
            }
            tblExportDump.Visible = true;
            gvExportDataDump.DataSource = dv;
            gvExportDataDump.DataBind();
            lblMsg.Visible = false;
            lblMsg.Text = "";
        }
        else
        {
            tblExportDump.Visible = false;
            lblMsg.Visible = true;
            lblMsg.Text = "Record not found.";
            lblMsg.ForeColor = System.Drawing.Color.Red;
        }
    }
}
