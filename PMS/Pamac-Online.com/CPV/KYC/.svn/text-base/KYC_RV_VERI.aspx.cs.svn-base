using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Data.OleDb;

public partial class CPV_KYC_KYC_RV_VERI : System.Web.UI.Page
{
    string verificationType = "RV";
    protected void Page_Init(object sender, EventArgs e)
    {
        funShowPanel();
    }
    CKYCVerification objKYC = new CKYCVerification();

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            //To Show the Panels add By Manoj            
            //funShowPanel();
            //End     
            hdnTransStart.Value = DateTime.Now.ToString();//"dd/MM/yyyy hh:mm:ss tt");
            if (Context.Request.QueryString["CaseID"] != null && Context.Request.QueryString["CaseID"] != "" && Context.Request.QueryString["VerTypeId"] != null && Context.Request.QueryString["VerTypeId"] != "")
            {
                //if (Session["isEdit"].ToString() != "1")
                //    ISEditFalse();
                txtPersonContacted.Focus();

                hidCaseID.Value = Request.QueryString["CaseID"].ToString();
                hidVerificationTypeID.Value = Request.QueryString["VerTypeId"].ToString();
                Session["CaseID"] = Request.QueryString["CaseID"].ToString();
                if ((Request.QueryString["Mode"] != null) && (Request.QueryString["Mode"] != ""))
                {
                    hidMode.Value = Request.QueryString["Mode"].ToString();
                }
                if ((Request.QueryString["VerificationTypeCode"] != null) && (Request.QueryString["VerificationTypeCode"] != ""))
                {
                    hidVerificationTypeCode.Value = Request.QueryString["VerificationTypeCode"].ToString();
                }
                OleDbDataReader oledbReadKYC;
                OleDbDataReader oledbCaseDtl;
                //oledbReadKYC = objKYC.GetBVDetail(sCaseId, sVerifyTypeId);
                oledbCaseDtl = objKYC.GetCASEDetail(hidCaseID.Value, hidVerificationTypeID.Value);

                if (oledbCaseDtl.Read() == true)
                {
                    txtRefNo.Text = oledbCaseDtl["REF_NO"].ToString();
                    txtInitiationDate.Text = oledbCaseDtl["CASE_REC_DATETIME"].ToString();
                    TextBox1.Text = oledbCaseDtl["NAME"].ToString();
                    txtSendDate.Text = oledbCaseDtl["SEND_DATETIME"].ToString();
                    if (!(oledbCaseDtl["CASE_STATUS_ID"].ToString().Trim().Length.Equals(0)))
                    ddlStatus.SelectedValue = oledbCaseDtl["CASE_STATUS_ID"].ToString();
                }
                txtDate1.Text = DateTime.Now.ToString("dd/MM/yyyy");
                txtDate2.Text = DateTime.Now.ToString("dd/MM/yyyy");
                txtDate3.Text = DateTime.Now.ToString("dd/MM/yyyy");
                FillStatus();
                GetCaseDetail();
                GetKYCVerificationEntry();
                GetTeleCallLog();
                GetVerifierName();
                if (hidMode.Value == "View")
                {
                    ReadOnly();
                    LikButtonVisibility();


                }


            }
        }

    }

    private void GetVerifierName()
    {
        OleDbDataReader oledbDR;
        oledbDR = objKYC.GetVerifierID(hidCaseID.Value);
        if (oledbDR.Read())
        {
            if (!(oledbDR["EMP_ID"].ToString().Trim().Length.Equals(0)))
                hidVerifierID.Value = oledbDR["EMP_ID"].ToString();

            if (!(oledbDR["FULLNAME"].ToString().Trim().Length.Equals(0)))
                txtVerifierName.Text = oledbDR["FULLNAME"].ToString();



        }
        oledbDR.Close();
    }

    private void GetKYCVerificationEntry()
    {
        OleDbDataReader oledbDR;
        oledbDR = objKYC.GetKYCVerificationEntry(hidCaseID.Value, hidVerificationTypeID.Value);
        if (oledbDR.Read())
        {

            string sTmp = oledbDR["sup_date_time"].ToString();
            if (sTmp != "")
            {
                string[] arrsupdatetime = sTmp.Split(' ');
                if (arrsupdatetime[0].ToString() != "")
                    txtSupervisorDate.Text = Convert.ToDateTime(arrsupdatetime[0].ToString()).ToString("dd/MM/yyyy");
                if (arrsupdatetime[1].ToString() != "")
                    txtSupervisorTime.Text = Convert.ToDateTime(arrsupdatetime[1].ToString()).ToString("hh:mm");

                ddlSupervisorTimeType.SelectedValue = arrsupdatetime[2].ToString();
            }


            string sTmp1 = oledbDR["veri_date_time"].ToString();
            if (sTmp1 != "")
            {
                string[] arrveridatetime = sTmp1.Split(' ');
                if (arrveridatetime[0].ToString() != "")
                    txtVerifierDate.Text = Convert.ToDateTime(arrveridatetime[0].ToString()).ToString("dd/MM/yyyy");
                if (arrveridatetime[1].ToString() != "")
                    txtVerifierTime.Text = Convert.ToDateTime(arrveridatetime[1].ToString()).ToString("hh:mm");

                ddlVerifierTimeType.SelectedValue = arrveridatetime[2].ToString();
            }
            if (!(oledbDR["Tlele_Remark"].ToString().Trim().Length.Equals(0)))
                txtRemark.Text = oledbDR["Tlele_Remark"].ToString();

            if (!(oledbDR["supervisor_name"].ToString().Trim().Length.Equals(0)))
                txtSupervisorName.Text = oledbDR["supervisor_name"].ToString();
            if (!(oledbDR["Marital_Status"].ToString().Trim().Length.Equals(0)))
                ddlMaritalStatus.SelectedValue = oledbDR["Marital_Status"].ToString();


            if (!(oledbDR["Name_Displayed_Board"].ToString().Trim().Length.Equals(0)))
                ddlNamePlateDisplay.SelectedValue = oledbDR["Name_Displayed_Board"].ToString();

            if (!(oledbDR["Relationship_with_Applicant"].ToString().Trim().Length.Equals(0)))
                txtRelationshipWithApp.Text = oledbDR["Relationship_with_Applicant"].ToString();

            if (!(oledbDR["Staying_since_Resi"].ToString().Trim().Length.Equals(0)))
                txtStayingSinceAtResi.Text = oledbDR["Staying_since_Resi"].ToString();


            if (!(oledbDR["Status_Demat_Account"].ToString().Trim().Length.Equals(0)))
                ddlStatusOfDematAcct.SelectedValue = oledbDR["Status_Demat_Account"].ToString();

            if (!(oledbDR["Name_Demat_Account"].ToString().Trim().Length.Equals(0)))
                txtNameOfDematAcct.Text = oledbDR["Name_Demat_Account"].ToString();

            if (!(oledbDR["Broking_through_other"].ToString().Trim().Length.Equals(0)))
                txtDoBrokeOtherThanSSKI.Text = oledbDR["Broking_through_other"].ToString();

            if (!(oledbDR["Attitude_Person_Contacted"].ToString().Trim().Length.Equals(0)))
                ddlAttituteOfContactPerson.SelectedValue = oledbDR["Attitude_Person_Contacted"].ToString();


            if (!(oledbDR["Rating"].ToString().Trim().Length.Equals(0)))
                ddlRating.SelectedValue = oledbDR["Rating"].ToString();

            //if (!(oledbDR["Status"].ToString().Trim().Length.Equals(0)))
            //    ddlStatus.SelectedItem = oledbDR["Status"].ToString();

            if (!(oledbDR["Product"].ToString().Trim().Length.Equals(0)))
                txtProduct.Text = oledbDR["Product"].ToString();


            if (!(oledbDR["Verification_Agent"].ToString().Trim().Length.Equals(0)))
                txtNameOfVerificationAgent.Text = oledbDR["Verification_Agent"].ToString();

            if (!(oledbDR["Residence_Address"].ToString().Trim().Length.Equals(0)))
                txtResidenceAddress.Text = oledbDR["Residence_Address"].ToString();

            if (!(oledbDR["Resi_Pincode"].ToString().Trim().Length.Equals(0)))
                txtResiPincode.Text = oledbDR["Resi_Pincode"].ToString();
            
            if (!(oledbDR["Resi_Tel_no"].ToString().Trim().Length.Equals(0)))
                txtResiTelNo.Text = oledbDR["Resi_Tel_no"].ToString();

            if (!(oledbDR["Resi_Landmark"].ToString().Trim().Length.Equals(0)))
                txtResiLandmark.Text = oledbDR["Resi_Landmark"].ToString();

            if (!(oledbDR["Permanent_Address"].ToString().Trim().Length.Equals(0)))
                txtPermanentAddress.Text = oledbDR["Permanent_Address"].ToString();

            if (!(oledbDR["Permanent_Pincode"].ToString().Trim().Length.Equals(0)))
                txtPermanentPincode.Text = oledbDR["Permanent_Pincode"].ToString();
            
            if (!(oledbDR["Permamnent_Tel_no"].ToString().Trim().Length.Equals(0)))
                txtPermanentTelNo.Text = oledbDR["Permamnent_Tel_no"].ToString();
         
            if (!(oledbDR["Business_Occupation_Details"].ToString().Trim().Length.Equals(0)))
                txtBusiOccupationDtl.Text = oledbDR["Business_Occupation_Details"].ToString();
            
            if (!(oledbDR["RV_COMMENT"].ToString().Trim().Length.Equals(0)))
                txtRvComment.Text = oledbDR["RV_COMMENT"].ToString();
            
            if (!(oledbDR["Place_Visited"].ToString().Trim().Length.Equals(0)))
            {
                if (oledbDR["Place_Visited"].ToString().Trim() != "Residence" && oledbDR["Place_Visited"].ToString().Trim() != "Office")
                {
                    ddlPlaceVisited.SelectedIndex = 3;
                    txtIfOthersSpecify.Text = oledbDR["Place_Visited"].ToString().Trim();
                }
                else
                {
                    ddlPlaceVisited.SelectedValue = oledbDR["Place_Visited"].ToString();
                }
            }

            if (!(oledbDR["Area_Residence"].ToString().Trim().Length.Equals(0)))
                txtAreaOfResidence.Text = oledbDR["Area_Residence"].ToString();

            if (!(oledbDR["Locating_Address"].ToString().Trim().Length.Equals(0)))
                ddlLocatingAddress.SelectedValue = oledbDR["Locating_Address"].ToString();

            if (!(oledbDR["Person_issued_Cerificate_spoken"].ToString().Trim().Length.Equals(0)))
                DropDownList1.SelectedValue = oledbDR["Person_issued_Cerificate_spoken"].ToString();

            if (!(oledbDR["Business_activity_Seen"].ToString().Trim().Length.Equals(0)))
                txtIfOfficeBusiActivity.Text = oledbDR["Business_activity_Seen"].ToString();
            
            if (!(oledbDR["Description_Res"].ToString().Trim().Length.Equals(0)))
                txtDescriptionOfResi.Text = oledbDR["Description_Res"].ToString();

            if (!(oledbDR["General_Comments"].ToString().Trim().Length.Equals(0)))
                txtGeneralComments.Text = oledbDR["General_Comments"].ToString();          
           
            if (!(oledbDR["Email_ID"].ToString().Trim().Length.Equals(0)))
                txtEmail.Text = oledbDR["Email_ID"].ToString();
                       
            if (!(oledbDR["Other_Institution_Demat_Account"].ToString().Trim().Length.Equals(0)))
                ddlHavingDematAcwithOtherInstitution.SelectedValue = oledbDR["Other_Institution_Demat_Account"].ToString();

            if (!(oledbDR["Name_Of_DP"].ToString().Trim().Length.Equals(0)))
                txtIfYesThenNameOfDP.Text = oledbDR["Name_Of_DP"].ToString();

            if (!(oledbDR["Name_Plate_Of_App_Sighted"].ToString().Trim().Length.Equals(0)))
                ddlNamePlateOfAppSighted.SelectedValue = oledbDR["Name_Plate_Of_App_Sighted"].ToString();
                    
            if (!(oledbDR["Other_Institution_SME_Account"].ToString().Trim().Length.Equals(0)))
                ddlHavingSMEAccountWithOtherInstitution.SelectedValue = oledbDR["Other_Institution_SME_Account"].ToString();

            if (!(oledbDR["Name_Of_Institution"].ToString().Trim().Length.Equals(0)))
                txtNameOfInstitution.Text = oledbDR["Name_Of_Institution"].ToString();
            if (!(oledbDR["Person_Contacted"].ToString().Trim().Length.Equals(0)))
                txtPersonContacted.Text = oledbDR["Person_Contacted"].ToString();

            if (!(oledbDR["Remark"].ToString().Trim().Length.Equals(0)))
                txtoverallRemark.Text = oledbDR["Remark"].ToString();
        }
        oledbDR.Close();

    }
    private void GetCaseDetail()
    {
        OleDbDataReader oledbDR;
        oledbDR = objKYC.GetKYCCaseDetail(hidCaseID.Value);
        if (oledbDR.Read())
        {
            if (!(oledbDR["REF_NO"].ToString().Trim().Length.Equals(0)))
                txtRefNo.Text = oledbDR["REF_NO"].ToString();

            if (!(oledbDR["Applicant_Name"].ToString().Trim().Length.Equals(0)))
                TextBox1.Text = oledbDR["Applicant_Name"].ToString();

            if (!(oledbDR["Address"].ToString().Trim().Length.Equals(0)))
                txtAddress.Text = oledbDR["Address"].ToString();

            if (!(oledbDR["CASE_REC_DATETIME"].ToString().Trim().Length.Equals(0)))
                txtInitiationDate.Text = oledbDR["CASE_REC_DATETIME"].ToString();

            if (!(oledbDR["DOB"].ToString().Trim().Length.Equals(0)))
                txtDOB.Text = oledbDR["DOB"].ToString();

            if (!(oledbDR["RES_PHONE"].ToString().Trim().Length.Equals(0)))
                txtPhone.Text = oledbDR["RES_PHONE"].ToString();

            if (!(oledbDR["MOBILE"].ToString().Trim().Length.Equals(0)))
                txtMobile.Text = oledbDR["MOBILE"].ToString();
        }
        oledbDR.Close();
    }
    private void GetTeleCallLog()
    {
        DataSet dsTeleCallLog = new DataSet();
        string sCaseId = hidCaseID.Value;
        if (sCaseId != "")
        {
            dsTeleCallLog = objKYC.GetTeleCallLogDetail(sCaseId, hidVerificationTypeID.Value);
            if (dsTeleCallLog.Tables[0].Rows.Count > 0)
            {

                for (int i = 0; i < dsTeleCallLog.Tables[0].Rows.Count; i++)
                {
                    if (i == 0)
                    {
                        string sAttemptDateTime = dsTeleCallLog.Tables[0].Rows[i]["ATTEMPT_DATE_TIME"].ToString();
                        string[] arrAttemptDateTime = sAttemptDateTime.Split(' ');
                        txtDate1.Text = Convert.ToDateTime(arrAttemptDateTime[0].ToString()).ToString("dd/MM/yyyy");
                        txtTime1.Text = Convert.ToDateTime(arrAttemptDateTime[1].ToString()).ToString("hh:mm");
                        ddlTimeType1.SelectedValue = arrAttemptDateTime[2].ToString().Trim();
                        txtRemark1.Text = dsTeleCallLog.Tables[0].Rows[i]["REMARK"].ToString();
                        //ddlVerifierName.SelectedValue = dsTeleCallLog.Tables[0].Rows[i]["VERIFIER_ID"].ToString();
                    }
                    if (i == 1)
                    {
                        string sAttemptDateTime = dsTeleCallLog.Tables[0].Rows[i]["ATTEMPT_DATE_TIME"].ToString();
                        string[] arrAttemptDateTime = sAttemptDateTime.Split(' ');
                        txtDate2.Text = Convert.ToDateTime(arrAttemptDateTime[0].ToString()).ToString("dd/MM/yyyy");
                        txtTime2.Text = Convert.ToDateTime(arrAttemptDateTime[1].ToString()).ToString("hh:mm");
                        ddlTimeType2.SelectedValue = arrAttemptDateTime[2].ToString().Trim();

                        txtRemark2.Text = dsTeleCallLog.Tables[0].Rows[i]["REMARK"].ToString();
                        //ddlVerifierName.SelectedValue = dsTeleCallLog.Tables[0].Rows[i]["VERIFIER_ID"].ToString();
                    }
                    if (i == 2)
                    {
                        string sAttemptDateTime = dsTeleCallLog.Tables[0].Rows[i]["ATTEMPT_DATE_TIME"].ToString();
                        string[] arrAttemptDateTime = sAttemptDateTime.Split(' ');
                        txtDate3.Text = Convert.ToDateTime(arrAttemptDateTime[0].ToString()).ToString("dd/MM/yyyy");
                        txtTime3.Text = Convert.ToDateTime(arrAttemptDateTime[1].ToString()).ToString("hh:mm");
                        ddlTimeType3.SelectedValue = arrAttemptDateTime[2].ToString().Trim();

                        txtRemark3.Text = dsTeleCallLog.Tables[0].Rows[i]["REMARK"].ToString();
                        //ddlVerifierName.Text = dsTeleCallLog.Tables[0].Rows[i]["VERIFIER_ID"].ToString();
                    }

                }
            }
        }

    }
    private void InsertTeleCallLog()
    {


        try
        {
            ArrayList arrTeleCallLog = new ArrayList();
            ArrayList arrLog1stCall = new ArrayList();
            ArrayList arrLog2ndCall = new ArrayList();
            ArrayList arrLog3rdCall = new ArrayList();

            string strCaseID = hidCaseID.Value;
            objKYC.CaseId = strCaseID;


            objKYC.VerificationTypeId = Request.QueryString["VerTypeId"].ToString();
            CCommon objCom = new CCommon();
            if (txtDate1.Text.Trim() != "" && txtTime1.Text.Trim() != "")
            {
                arrLog1stCall.Clear();
                arrLog1stCall.Add(objCom.strDate(txtDate1.Text.Trim()) + " " + txtTime1.Text.Trim() + " " + ddlTimeType1.SelectedItem.Text.Trim());
                arrLog1stCall.Add(txtRemark1.Text.Trim());

                arrLog1stCall.Add(hidVerifierID.Value);
                arrTeleCallLog.Add(arrLog1stCall);
            }

            if (txtDate2.Text.Trim() != "" && txtTime2.Text.Trim() != "")
            {
                arrLog2ndCall.Clear();
                arrLog2ndCall.Add(objCom.strDate(txtDate2.Text.Trim()) + " " + txtTime2.Text.Trim() + " " + ddlTimeType2.SelectedItem.Text.Trim());
                arrLog2ndCall.Add(txtRemark2.Text.Trim());

                arrLog2ndCall.Add(hidVerifierID.Value);
                arrTeleCallLog.Add(arrLog2ndCall);
            }

            if (txtDate3.Text.Trim() != "" && txtTime3.Text.Trim() != "")
            {
                arrLog3rdCall.Clear();
                arrLog3rdCall.Add(objCom.strDate(txtDate3.Text.Trim()) + " " + txtTime3.Text.Trim() + " " + ddlTimeType3.SelectedItem.Text.Trim());
                arrLog3rdCall.Add(txtRemark3.Text.Trim());

                arrLog3rdCall.Add(hidVerifierID.Value);
                arrTeleCallLog.Add(arrLog3rdCall);
            }

            if (objKYC.InsertTeleCallLog(arrTeleCallLog) == 1)
            {

            }
        }
        catch (Exception ex)
        {
            throw new Exception("Error found during Inserting records in TeleCallLog" + ex.Message);

        }
    }
    protected void btnSubmit_Click(object sender, EventArgs e)
    {
        CKYCVerification objKYC = new CKYCVerification();
        int iCount = 0;
        string sMsg = "";
        CCommon objCom = new CCommon();
        try
        {
            objKYC.CaseId = Request.QueryString["CaseId"].ToString();
            objKYC.VerificationTypeId = hidVerificationTypeID.Value;
          
            objKYC.PersonContacted = txtPersonContacted.Text.Trim();
            objKYC.OverallRemark = txtoverallRemark.Text.Trim();
            if ((txtSupervisorDate.Text.Trim() != "" && txtSupervisorDate.Text.Trim() != null) && (txtSupervisorTime.Text != "" && txtSupervisorTime.Text != null))
            {
                objKYC.SupervisorDateTime = objCom.strDate(txtSupervisorDate.Text.Trim()) + " " + txtSupervisorTime.Text.Trim() + " " + ddlSupervisorTimeType.SelectedValue;
            }
            if (txtVerifierDate.Text.Trim() != "" && txtVerifierDate.Text.Trim() != null && txtVerifierTime.Text.Trim() != "" && txtVerifierTime.Text.Trim() != null)
            {
                objKYC.VerifierDatetime = objCom.strDate(txtVerifierDate.Text.Trim()) + " " + txtVerifierTime.Text.Trim() + " " + ddlVerifierTimeType.SelectedValue;
            }
            if (txtSupervisorName.Text.Trim() != "")
            {
                objKYC.SupervisorName = txtSupervisorName.Text.Trim();
            }
                      
            objKYC.TeleRemark = txtRemark.Text.Trim();    
            objKYC.NameRVComment = txtRvComment.Text.Trim().ToString();

            string sBusinessEquipSighted = "";
           
            objKYC.BusinessEquipSighted = sBusinessEquipSighted.TrimEnd(',');
            objKYC.VerifierName = txtVerifierName.Text.Trim();
            objKYC.Address = txtAddress.Text.Trim();
            objKYC.PhoneNo = txtPhone.Text.Trim();
            objKYC.MobileNo = txtMobile.Text.Trim();
            objKYC.EmailId = txtEmail.Text.Trim();
            objKYC.DateOfBirth = txtDOB.Text.Trim();
            if (DropDownList1.SelectedIndex != 0)
            {
                objKYC.Neighbour = DropDownList1.SelectedItem.Text.Trim();
            }
            if (ddlMaritalStatus.SelectedIndex != 0)
            {
                objKYC.MaritalStatus = ddlMaritalStatus.SelectedItem.Text.Trim();
            }
            if (ddlNamePlateDisplay.SelectedIndex != 0)
            {
                objKYC.NameDisplayOnNameBoard = ddlNamePlateDisplay.SelectedItem.Text.Trim();
            }
            objKYC.RelationshipWithApplicant = txtRelationshipWithApp.Text.Trim();
            objKYC.StayingSinceAtResi = txtStayingSinceAtResi.Text.Trim();
            if (ddlStatusOfDematAcct.SelectedIndex != 0)
            {
                objKYC.StatusOfDematAcct = ddlStatusOfDematAcct.SelectedItem.Text.Trim();
            }
            objKYC.NameOfDematAcct = txtNameOfDematAcct.Text.Trim();
            objKYC.DoingBroken = txtDoBrokeOtherThanSSKI.Text.Trim();
            if (ddlAttituteOfContactPerson.SelectedIndex != 0)
            {
                objKYC.AttituteOfPersonContacted = ddlAttituteOfContactPerson.SelectedItem.Text.Trim();
            }
            if (ddlRating.SelectedIndex != 0)
            {
                objKYC.Rating = ddlRating.SelectedItem.Text.Trim();
            }
           
                objKYC.Status = ddlStatus.SelectedItem.Text.Trim();

                objKYC.CaseStatusId = ddlStatus.SelectedValue.ToString();
            
            objKYC.SendDate = txtSendDate.Text.Trim();
            objKYC.Product = txtProduct.Text.Trim();
            objKYC.NameOfVerifyAgent = txtNameOfVerificationAgent.Text.Trim();
            objKYC.ResidenceAddress = txtResidenceAddress.Text.Trim();
            objKYC.ResiPincode = txtResiPincode.Text.Trim();
            objKYC.ResiTelNo = txtResiTelNo.Text.Trim();
            objKYC.ResiLandmark = txtResiLandmark.Text.Trim();
            objKYC.PermanentAddress = txtPermanentAddress.Text.Trim();
            objKYC.PermanentPincode = txtPermanentPincode.Text.Trim();
            objKYC.PermanentTelNo = txtPermanentTelNo.Text.Trim();
            objKYC.BusinessOccupDetail = txtBusiOccupationDtl.Text.Trim();
            if (ddlPlaceVisited.SelectedIndex != 0)
            {
                objKYC.PlaceVisited = ddlPlaceVisited.SelectedItem.Text.Trim();
            }
            if (ddlPlaceVisited.SelectedIndex == 3)
            {
                objKYC.PlaceVisited = txtIfOthersSpecify.Text.Trim();
            }
            if (ddlNamePlateOfAppSighted.SelectedIndex != 0)
            {
                objKYC.NamePlateofApplicantSighted = ddlNamePlateOfAppSighted.SelectedItem.Text.Trim();
            }
            objKYC.AreaOfResidence = txtAreaOfResidence.Text.Trim();
            if (ddlLocatingAddress.SelectedIndex != 0)
            {
                objKYC.LocatingAddress = ddlLocatingAddress.SelectedItem.Text.Trim();
            }
            objKYC.IfOfficeBusiActivitySeen = txtIfOfficeBusiActivity.Text.Trim();
            objKYC.DescriptionOfResi = txtDescriptionOfResi.Text.Trim();
            objKYC.GeneralComment = txtGeneralComments.Text.Trim();
            
            if (ddlHavingDematAcwithOtherInstitution.SelectedIndex != 0)
            {
                objKYC.HavingDematAccountWithOtherInstitution = ddlHavingDematAcwithOtherInstitution.SelectedValue.ToString();
            }
            objKYC.NameOfDP = txtIfYesThenNameOfDP.Text.Trim();
            if (ddlNamePlateOfAppSighted.SelectedIndex != 0)
            {
                objKYC.NamePlateofApplicantSighted = ddlNamePlateOfAppSighted.SelectedValue.ToString();
            }
            if (ddlHavingSMEAccountWithOtherInstitution.SelectedIndex != 0)
            {
                objKYC.HavingSMEAccountWithOtherInstitution = ddlHavingSMEAccountWithOtherInstitution.SelectedValue.ToString();
            }
            objKYC.NameOfInstitution = txtNameOfInstitution.Text.Trim();
            objKYC.NameRVComment = txtRvComment.Text.Trim();
            //Added by hemangi kambli on 03/10/2007 
            if (hdnTransStart.Value != "")
                objKYC.TransStart = Convert.ToDateTime(hdnTransStart.Value);
            objKYC.TransEnd = Convert.ToDateTime(DateTime.Now.ToString());//"dd/MM/yyyy hh:mm:ss tt"));
            objKYC.CentreId = Session["CentreId"].ToString();
            objKYC.ProductId = Session["ProductId"].ToString();
            objKYC.ClientId = Session["ClientId"].ToString();
            objKYC.UserId = Session["UserId"].ToString();
            ///------------------------------------------------------
            sMsg = objKYC.InsertKYCVerificationEntry();
                        InsertTeleCallLog();
            if (sMsg != "")
            {
                pnlMsg.Visible = true;
                tblMsg.Visible = true;
                lblMsg.Text = sMsg.Trim();
                lblMsg.ForeColor = System.Drawing.Color.Red;
                iCount = 1;
            }
                        
        }
        catch (Exception ex)
        {
            pnlMsg.Visible = true;
            tblMsg.Visible = true;
            lblMsg.ForeColor = System.Drawing.Color.Red;
            lblMsg.Text = "Error:" + ex.Message;
        }
        if (iCount == 1)
        {
            Response.Redirect("KYC_VerificationView.aspx?Msg=" + lblMsg.Text);
        }
    }
    private void FillStatus()
    {
        DataTable dtStatus = new DataTable();
        dtStatus = objKYC.GetCaseStatus();
        ddlStatus.DataTextField = "STATUS_NAME";
        ddlStatus.DataValueField = "CASE_STATUS_ID";
        ddlStatus.DataSource = dtStatus;
        ddlStatus.DataBind();

       
    }
    
    public void funShowPanel()
    {
        CGet objCGet = new CGet();
        string strClientID = Session["ClientId"].ToString();
        string strActivityID = Session["ActivityId"].ToString();
        string strProductID = Session["ProductId"].ToString();
        string strVerificationType = "1";
        string strPanelName = "";
        string strPlaceHolderName = "";
        int nCount = 1;

        DataSet dsPanel = objCGet.getPanels(strActivityID, strProductID, strClientID, strVerificationType);
        if (dsPanel != null)
        {
            if (dsPanel.Tables[0].Rows.Count != 0)
            {

                for (int i = 0; i < dsPanel.Tables[0].Rows.Count; i++)
                {
                    //CountBonusRows += 1;
                    strPanelName = dsPanel.Tables[0].Rows[i]["PANEL_NAME"].ToString();
                    strPlaceHolderName = "PlaceHolder" + nCount.ToString();


                    PlaceHolder objPlaceHolder = new PlaceHolder();
                    objPlaceHolder = (PlaceHolder)(tblKYCVerification.Rows[0].Cells[0].FindControl(strPlaceHolderName));
                    if (objPlaceHolder != null)
                    {

                        Panel objPanel = new Panel();
                        //objPanel.EnableViewState = false;
                        objPanel = (Panel)(tblKYCVerification.Rows[1].Cells[0].FindControl(strPanelName));
                        if (objPanel != null)
                        {
                            objPanel.Visible = true;

                            objPlaceHolder.Controls.Add(objPanel);
                        }
                    }
                    //ViewState["strPlaceHolder"+nCount.ToString()] = objPlaceHolder;
                    nCount++;

                }

            }
        }
    }
    protected void btnCancel_Click(object sender, EventArgs e)
    {
        Response.Redirect("KYC_VerificationView.aspx");
    }
    private void LikButtonVisibility()
    {
        string verificationTypeCode = hidVerificationTypeCode.Value;
        string[] arrVerificationTypeCode = verificationTypeCode.Split(' ');
        for (int i = 0; i < arrVerificationTypeCode.Length; i++)
        {
            if (arrVerificationTypeCode[i].Length > 0)
            {
                if (verificationType == arrVerificationTypeCode[i].ToString())
                {
                }
                else
                    MatchVerificationType(arrVerificationTypeCode[i].ToString());

            }

        }
    }
    private void MatchVerificationType(string code)
    {
        switch (code)
        {
            case "RV":
                lbRV.Visible = true;
                break;
            case "BV":
                lbBV.Visible = true;
                break;
            case "CA":
                lbCA.Visible = true;
                break;
           
        }

    }
    protected void lbRV_Click(object sender, EventArgs e)
    {
        Response.Redirect("KYC_RV_VERI.aspx?CaseID=" + hidCaseID.Value + "&VerTypeId=1&VerificationTypeCode=" + hidVerificationTypeCode.Value + "&Mode=View");
    }
    protected void lbBV_Click(object sender, EventArgs e)
    {
        Response.Redirect("KYC_BUSINESS_VERI.aspx?CaseID=" + hidCaseID.Value + "&VerTypeId=2&VerificationTypeCode=" + hidVerificationTypeCode.Value + "&Mode=View");
    }
  
    protected void lbCA_Click(object sender, EventArgs e)
    {
        Response.Redirect("KYC_CA_VERI.aspx?CaseID=" + hidCaseID.Value + "&VerTypeId=19&VerificationTypeCode=" + hidVerificationTypeCode.Value + "&Mode=View");
    }
    private void ReadOnly()
    {
            txtRefNo.Enabled=false;
            txtInitiationDate.Enabled=false;
            TextBox1.Enabled=false;
            txtSendDate.Enabled=false;
            ddlStatus.Enabled=false;
            txtVerifierName.Enabled=false;
            txtSupervisorDate.Enabled=false;
            txtSupervisorTime.Enabled=false;
            ddlSupervisorTimeType.Enabled=false;
            txtVerifierDate.Enabled=false;
            txtVerifierTime.Enabled=false;
            ddlVerifierTimeType.Enabled=false;
            txtRemark.Enabled=false;
            txtSupervisorName.Enabled=false;
            ddlMaritalStatus.Enabled=false;
            ddlNamePlateDisplay.Enabled=false;
            txtRelationshipWithApp.Enabled=false;
            txtStayingSinceAtResi.Enabled=false;
            ddlStatusOfDematAcct.Enabled=false;
            txtNameOfDematAcct.Enabled=false;
            txtDoBrokeOtherThanSSKI.Enabled=false;
            ddlAttituteOfContactPerson.Enabled=false;
            ddlRating.Enabled=false;
            txtProduct.Enabled=false;
            txtNameOfVerificationAgent.Enabled=false;
            txtResidenceAddress.Enabled=false;
            txtResiPincode.Enabled=false;
            txtResiTelNo.Enabled=false;
            txtResiLandmark.Enabled=false;
            txtPermanentAddress.Enabled=false;
            txtPermanentPincode.Enabled=false;
            txtPermanentTelNo.Enabled=false;
            txtBusiOccupationDtl.Enabled=false;
            txtRvComment.Enabled=false;
            ddlPlaceVisited.Enabled=false;
            txtIfOthersSpecify.Enabled=false;
            ddlPlaceVisited.Enabled=false;
            txtAreaOfResidence.Enabled=false;
            ddlLocatingAddress.Enabled=false;
            txtIfOfficeBusiActivity.Enabled=false;
            txtIfOfficeBusiActivity.Enabled=false;
            txtDescriptionOfResi.Enabled=false;
            txtGeneralComments.Enabled=false;          
            txtEmail.Enabled=false;
            ddlHavingDematAcwithOtherInstitution.Enabled=false;
            txtIfYesThenNameOfDP.Enabled=false;
            ddlNamePlateOfAppSighted.Enabled=false;
            ddlHavingSMEAccountWithOtherInstitution.Enabled=false;
            txtNameOfInstitution.Enabled=false;
            txtPersonContacted.Enabled=false;
            txtRefNo.Enabled=false;
            TextBox1.Enabled=false;
            txtAddress.Enabled=false;
            txtInitiationDate.Enabled=false;
            txtDOB.Enabled=false;
            txtPhone.Enabled=false;
            txtMobile.Enabled=false;
            txtDate1.Enabled=false;
            txtTime1.Enabled=false;
            ddlTimeType1.Enabled=false;
             txtRemark1.Enabled=false;
            txtDate2.Enabled=false;
            txtTime2.Enabled=false;
            ddlTimeType2.Enabled=false;
            txtRemark2.Enabled=false;
            txtDate3.Enabled=false;
            txtTime3.Enabled=false;
            ddlTimeType3.Enabled=false;
            txtRemark3.Enabled = false;
            btnCancel.Enabled = false;
            btnSubmit.Enabled = false;
            DropDownList1.Enabled = false;   
    }
}
